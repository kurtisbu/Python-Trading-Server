# docker-compose.yml

services:
  # --- The Backend Trading Server Service ---
  trading-server:
    build:
      context: .
      # Target the 'backend' stage in our multi-stage Dockerfile
      target: backend
    container_name: trading_server_api
    restart: unless-stopped
    ports:
      # Expose the API on port 5000
      - "5000:5000"
    volumes:
      # Mount secrets, config, and the database for persistence
      - ./.env:/app/.env:ro
      - ./config.yaml:/app/config.yaml
      - ./data:/app/data
      # Mount the src directory to see code changes without rebuilding (for development)
      - ./src:/app/src

  # --- The Frontend Dashboard Service ---
  dashboard-gui:
    build:
      context: .
      # Target the 'frontend' stage in our multi-stage Dockerfile
      target: frontend
    container_name: trading_server_gui
    restart: unless-stopped
    ports:
      # Expose the Streamlit dashboard on port 8501
      - "8501:8501"
    volumes:
      # Mount the dashboard script to see changes without rebuilding
      - ./dashboard.py:/app/dashboard.py
      - ./pages:/app/pages
    environment:
      # Pass the internal API URL to the dashboard container.
      # 'trading-server' is the name of our backend service defined above.
      # Docker's internal DNS will resolve this to the backend's container IP.
      - API_URL=http://trading-server:5000
    # This tells Docker to start the trading-server *before* starting the dashboard.
    depends_on:
      - trading-server